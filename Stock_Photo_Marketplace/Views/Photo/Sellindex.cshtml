@model IEnumerable<Stock_Photo_Marketplace.Models.Photo>

@{
    ViewData["Title"] = "Existing Photos";
    var successMessage = TempData["SuccessMessage"] as string;

}

<a href="@Url.Action("Sell", "Photo")" class="btn btn-success btn-lg mx-2" style="width: 450px; height: 50px; position: relative;">
    <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 0.7rem;">
        Add New Photo
    </div>
</a>
<br><br >
<h2>@ViewData["Title"]</h2>

<div class="row">
    @foreach (var photo in Model)
    {
        <div class="col-md-4">
            <div class="card mb-4" style="height: 400px;">
                <img src="@Url.Content(photo.FilePath)" class="card-img-top" alt="@photo.Title" style="height: 200px; object-fit: cover;"> <!-- Set image height and fit -->

                <div class="card-body">
                    <h5 class="card-title">@photo.Title</h5>
                    <p class="card-text">@photo.Description</p>
                    <p class="card-text"><strong>Price: @photo.Price.ToString("C")</strong></p>                  

                    <!-- Edit button -->
                    <a href="@Url.Action("Edit", "Photo", new { id = photo.PhotoID })" class="btn btn-outline-primary">
                        <i class="fas fa-edit"></i> Edit
                    </a>

                    <!-- Delete button -->
                    <form action="@Url.Action("Delete", "Photo", new { id = photo.PhotoID })" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this photo?');">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-danger">
                            <i class="fas fa-trash-alt"></i> Delete
                        </button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>
<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Success</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Photo uploaded successfully!
            </div>
            <div class="modal-footer">
                <button type="button" id="oksuccessbtn" class="btn btn-primary" data-dismiss="modal">OK</button> 
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <!-- Trigger Modal on Success -->
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <script>
            // Show the success modal if successMessage is not null
            var successModal = new bootstrap.Modal(document.getElementById('successModal'));
            successModal.show();

            $('<button class="btn btn-primary" id="oksuccessbtn">OK</button>').appendTo('#modalFooter').on('click', function () {
                $('#successModal').modal('hide'); // Hide the modal on OK button click
                window.location.href = '/'; // Redirect to homepage (adjust the URL as needed)
            });
        </script>
    }
    <script>
        // Handle form submission
        $('#submitPurchase').on('click', function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Get form fields
            const cardholderName = $('#cardholderName').val().trim();
            const cardNumber = $('#cardNumber').val().trim();
            const expirationDate = $('#expirationDate').val().trim();
            const cvv = $('#cvv').val().trim();

            // Check if all fields are filled
            if (!cardholderName || !cardNumber || !expirationDate || !cvv) {
                alert('Please fill in all fields.');
                return; // Prevent further execution
            }

            // Validate input patterns
            const cardNumberPattern = /^\d{16}$/;
            const expirationDatePattern = /^(0[1-9]|1[0-2])\/[0-9]{2}$/;
            const cvvPattern = /^\d{3}$/;

            if (!cardNumberPattern.test(cardNumber)) {
                alert('Card number must be 16 digits.');
                return; // Prevent further execution
            }
            if (!expirationDatePattern.test(expirationDate)) {
                alert('Expiration date must be in MM/YY format.');
                return; // Prevent further execution
            }
            if (!cvvPattern.test(cvv)) {
                alert('CVV must be 3 digits.');
                return; // Prevent further execution
            }

            // If all validations pass, show success message
            $('#purchaseFormContainer').hide();
            $('#successMessage').removeClass('d-none');
            $('#modalFooter').hide(); // Hide the footer buttons

            // Add OK button to close the modal and redirect
            $('<button class="btn btn-primary" id="okButton">OK</button>').appendTo('#modalFooter').on('click', function () {
                $('#purchaseModal').modal('hide'); 
                window.location.href = '/'; 
            });
        });

        // When the modal is shown, set the photo ID
        $('#purchaseModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); 
            var photoId = button.data('photo-id'); 
            var modal = $(this);
            modal.find('#photoId').val(photoId); 
            modal.find('#successMessage').addClass('d-none'); // Hide the success message initially
            modal.find('#purchaseFormContainer').show(); // Show the form
            modal.find('#modalFooter').show(); 
        });
    </script>
}

